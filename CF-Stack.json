{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Web, App and DB server configuration",
    "Resources" : {
        "myVPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
               "CidrBlock" : "10.1.0.0/16",
               "EnableDnsSupport" : "true",
               "EnableDnsHostnames" : "true",
               "Tags" : [ 
                  {"Key" : "stack", "Value" : "development"} 
               ]
            }
        },
        "myInternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
              "Tags" : [ {"Key" : "stack", "Value" : "development"}]
            }
        },
        "GatewayToInternet" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "InternetGatewayId" : { "Ref" : "myInternetGateway" }
             }
        },
        "ElasticIp": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "myVPC"
            }
        },
        "NatGateway": {
            "Type": "AWS::EC2::NatGateway",
            "DependsOn": "WebSubnet",
            "Properties": {
                "AllocationId" : { "Fn::GetAtt" : ["ElasticIp", "AllocationId"]},
                "SubnetId" : { "Ref" : "WebSubnet"}
            }
        },
        "WebSubnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "CidrBlock" : "10.1.1.0/24",
               "AvailabilityZone" : "us-east-1a",
               "MapPublicIpOnLaunch" : true,
               "Tags" : [ { "Key" : "stack", "Value" : "WebSubnet" } ]
            }
        },
        "WebRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "Tags" : [ { "Key" : "stack", "Value" : "WebRouteTable" } ]
            }
        },
        "WebRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "GatewayToInternet",
            "Properties" : {
               "RouteTableId" : { "Ref" : "WebRouteTable" },
               "DestinationCidrBlock" : "0.0.0.0/0",
               "GatewayId" : { "Ref" : "myInternetGateway" }
            }
        },
        "WebSubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "WebSubnet" },
               "RouteTableId" : { "Ref" : "WebRouteTable" }
             }
         },
        "WebSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow http(port 80) and ssh(port 22) traffic to WebTier ",
                "VpcId": { "Ref": "myVPC"},
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort" : 22,
                    "ToPort" : 22,
                    "CidrIp": "0.0.0.0/0"                    
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort" : 80,
                    "ToPort" : 80,
                    "CidrIp": "0.0.0.0/0"
                }
                ]
            }
        },
        "AppSubnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "CidrBlock" : "10.1.2.0/24",
               "AvailabilityZone" : "us-east-1b",
               "MapPublicIpOnLaunch" : false,
               "Tags" : [ { "Key" : "stack", "Value" : "AppSubnet" } ]
            }
        },
        "AppRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "Tags" : [ { "Key" : "stack", "Value" : "AppRouteTable" } ]
            }
        },
        "AppRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
               "RouteTableId" : { "Ref" : "AppRouteTable" },
               "DestinationCidrBlock" : "0.0.0.0/0",
               "NatGatewayId" : { "Ref" : "NatGateway" }
            }
        },
        "AppSubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "AppSubnet" },
               "RouteTableId" : { "Ref" : "AppRouteTable" }
             }
        },
        "AppSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allow SSH (port 22) traffic from Web Tier to App Tier",
                "VpcId" : {"Ref" : "myVPC"},
                "SecurityGroupIngress" : [{
                    "IpProtocol" : "tcp",
                    "FromPort" : 22,
                    "ToPort" : 22,
                    "CidrIp" : "10.1.1.0/24"
                }]
            }
        },
        "RDSSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "CidrBlock" : "10.1.3.0/24",
               "AvailabilityZone" : "us-east-1c",
               "Tags" : [ { "Key" : "stack", "Value" : "RDSSubnet1" } ]
            }
        },
        "RDSSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "CidrBlock" : "10.1.4.0/24",
               "AvailabilityZone" : "us-east-1d",
               "Tags" : [ { "Key" : "stack", "Value" : "RDSSubnet2" } ]
            }
        },
        "RDSRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "Tags" : [ { "Key" : "stack", "Value" : "RDSRouteTable" } ]
            }
        },
        "RDSRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
               "RouteTableId" : { "Ref" : "RDSRouteTable" },
               "DestinationCidrBlock" : "0.0.0.0/0",
               "NatGatewayId" : { "Ref" : "NatGateway" }
            }
        },
        "RDSSubnetGroup" : {
            "Type" : "AWS::RDS::DBSubnetGroup",
            "Properties" : {
                "DBSubnetGroupDescription" : "RDS Subnet Group",
                "SubnetIds" : [
                { 
                    "Ref" : "RDSSubnet1"
                },
                {
                    "Ref" : "RDSSubnet2"
                }
                ]
            }
        },
        "RDSSubnetRouteTableAssociation1" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "RDSSubnet1" },
               "RouteTableId" : { "Ref" : "RDSRouteTable" }
             }
        },
		"RDSSubnetRouteTableAssociation2" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "RDSSubnet2" },
               "RouteTableId" : { "Ref" : "RDSRouteTable" }
             }
        },
        "RDSSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allow MySQL (port 3306) traffic from App Tier to database instance",
                "VpcId" : {"Ref" : "myVPC"},
                "SecurityGroupIngress" : [{
                    "IpProtocol" : "tcp",
                    "FromPort" : 3306,
                    "ToPort" : 3306,
                    "CidrIp" : "10.1.2.0/24"
                }],
                "SecurityGroupEgress" : [{
                    "IpProtocol" : "-1",
                    "CidrIp" : "0.0.0.0/0" 
                }]
            }
        },
        "WebInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn" : "WebSecurityGroup",
            "Properties":{
              "AvailabilityZone" : "us-east-1a",
              "ImageId": "ami-0cff7528ff583bf9a",
              "InstanceType": "t2.micro",
              "KeyName": "KeyPairNVirginia",
              "SecurityGroupIds" : [{ "Ref" : "WebSecurityGroup"}],
              "SubnetId" : { "Ref" : "WebSubnet"},
              "UserData" : {
                "Fn::Base64": "#!/bin/bash\nyum update -y\nyum install httpd -y\nsystemctl start httpd\nsystemctl enable httpd\n"
              }
            }
        },
        "AppInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn" : "AppSecurityGroup",
            "Properties":{
              "AvailabilityZone" : "us-east-1b",
              "ImageId": "ami-0cff7528ff583bf9a",
              "InstanceType": "t2.micro",
              "KeyName": "KeyPairNVirginia",
              "SecurityGroupIds" : [{ "Ref" : "AppSecurityGroup"}],
              "SubnetId" : { "Ref" : "AppSubnet"}
            }
        },
        "MySQLRDSInstance" : {
            "Type" : "AWS::RDS::DBInstance",
            "Properties" : {
                "AllocatedStorage" : { "Ref" : "DatabaseStorageAllocation"},
                "DBInstanceClass" : { "Ref" : "DatabaseInstanceClass"},
                "Engine" : "MySQL",
                "EngineVersion" : "8.0.28",
                "MasterUsername" : { "Ref" : "DBAdminUsername"},
                "MasterUserPassword" : { "Ref" : "DBAdminPassword"},
                "DBSubnetGroupName" : {"Ref" : "RDSSubnetGroup"},
                "VPCSecurityGroups" : [{ "Ref" : "RDSSecurityGroup"}]
            }
        },
        "HostedZone" : {
            "Type" : "AWS::Route53::HostedZone",
            "Properties" : {
                "Name" : "www.rapahere.tk"
            }
        },
        "MyDNSRecords" : {
            "Type" : "AWS::Route53::RecordSet",
            "Properties" : {
                "Name" : "www.rapahere.tk",
                "HostedZoneId" : {"Ref" : "HostedZone"},
                "ResourceRecords" : [
                    { 
                        "Fn::GetAtt" : [ "WebInstance", "PublicIp" ] 
                    }
                ],
                "TTL" : "300",
                "Type" : "A"
            }
        }
    },
    "Parameters" : {
        "DatabaseStorageAllocation" : {
            "Default" : "15",
            "Description" : "Enter the size of the database (GB)",
            "Type" : "Number",
            "MinValue" : "10",
            "MaxValue" : "1024",
            "ConstraintDescription" : "Value must be between 10 - 1024"
        },
        "DatabaseInstanceClass" : {
            "Description" : "Select Instance Type",
            "Type" : "String",
            "Default" : "db.t2.micro"
        },
        "DBAdminUsername" : {
            "Description" : "Database Administration User Name",
            "Type" : "String",
            "Default" : "admin"
        },
        "DBAdminPassword" : {
            "Description" : "Database Administration User Password",
            "Type" : "String",
            "Default" : "admin123"
        }
    },
    "Outputs" : {
        "PublicIp" : {
            "Description" : "Web Instance Public Ip",
            "Value" : {
                "Fn::GetAtt" : [ "WebInstance", "PublicIp" ]
            }
        },
        "HostedZoneId" : {
            "Description" : "The ID of the hosted zone",
            "Value" : "HostedZone"
        }

    }  
}